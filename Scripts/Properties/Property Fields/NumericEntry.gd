#meta-name: New SelectionPropertyField
#meta-description: Template for creating a new PropertyFields. Will automatically append "PropertyField" to the end of whatever name is given
#meta-default: true
extends SelectionPropertyField
class_name NumericEntryPropertyField
## The [SelectionPropertyField] generated by [NumericEntryProperty].
##
## Allows the user to interact with the properties of [DraggableObject]s through the [SelectionMenu].
## [br]Executes the definition given by a [NumericEntryProperty].
## [br][br]Designed to allow the user to input an incrementable number.
## [br][br]The function [member SelectionProperty.commandName] of the [member SelectionPropertyField.associatedObject] will be called when:
## [br] - [member numbox] emits [signal Range.value_changed]

#region Member Variables
var numbox : SpinBox
#endregion

#region Initialization
## Class Initialization
func _init(obj : DraggableObject, property : NumericEntryProperty):
	super(obj, property) #calls SelectionPropertyField._init()
	
	# create and setup the number box
	numbox = SpinBox.new()
	if (property.minimum > NumericEntryProperty.NO_MINIMUM):
		numbox.min_value = property.minimum
		numbox.allow_lesser = false
	else:
		numbox.allow_lesser = true
	if (property.maximum < NumericEntryProperty.NO_MAXIMUM):
		numbox.max_value = property.maximum
		numbox.allow_greater = false
	else:
		numbox.allow_greater = true
	numbox.prefix = property.prefix
	numbox.suffix = property.suffix
	numbox.step = pow(0.1, property.decimalPlaces)
	numbox.value = property.defaultValue
	numbox.size_flags_horizontal = SIZE_EXPAND_FILL # will take up whatever space it can after the name
	
	# add the numbox
	self.add_child(numbox)
	
	#connect the numbox
	numbox.value_changed.connect(Callable(obj,property.onUpdate))
	#this will directly send the float value, so there is no need for the object to use a getter on this
#endregion
